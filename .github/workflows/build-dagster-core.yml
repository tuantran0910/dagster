name: Build Dagster Python Packages

on:
  push:
    tags:
      - release

env:
  PYTHON_VERSION: "3.12"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate CalVer tag
        id: calver
        run: |
          # Get current date in YYYY.MM.DD format
          DATE=$(date +%Y.%m.%d)
          echo "Generating CalVer tag for date: $DATE"

          # Try to get existing tags for today to determine the build number
          echo "Checking for existing tags..."

          EXISTING_TAGS=""

          # Check GitHub release tags (with prefix)
          EXISTING_TAGS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases" 2>/dev/null \
            | jq -r '.[] | select(.tag_name | startswith("dagster/")) | .tag_name' \
            | sed 's/dagster\///' \
            | grep "^$DATE\." | sort -V | tail -1 || echo "")

          if [ -z "$EXISTING_TAGS" ]; then
            echo "No existing tags found for today, starting with .0"
            BUILD_NUMBER=0
          else
            echo "Found existing tag: $EXISTING_TAGS"
            # Extract the build number and increment
            BUILD_NUMBER=$(echo "$EXISTING_TAGS" | cut -d'.' -f4)
            BUILD_NUMBER=$((BUILD_NUMBER + 1))
            echo "Incrementing build number to: $BUILD_NUMBER"
          fi

          CALVER_TAG="${DATE}.${BUILD_NUMBER}"
          echo "Generated CalVer tag: $CALVER_TAG"
          echo "calver_tag=$CALVER_TAG" >> $GITHUB_OUTPUT

      - name: Clean up trigger tag
        run: |
          # Delete the trigger tag both locally and remotely early in the process
          # This ensures cleanup happens even if later steps fail
          TRIGGER_TAG=$(echo "${{ github.event.ref }}" | sed 's|refs/tags/||')
          echo "🧹 Cleaning up trigger tag: $TRIGGER_TAG"

          # Delete the remote tag
          git push origin --delete "$TRIGGER_TAG"
          echo "✅ Successfully deleted remote trigger tag: $TRIGGER_TAG"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel twine

      - name: Update version
        run: |
          VERSION="${{ steps.calver.outputs.calver_tag }}"
          echo "Setting version to $VERSION"
          # Update version in version.py
          sed -i "s|__version__ = \".*\"|__version__ = \"$VERSION\"|" python_modules/dagster/dagster/version.py
          cat python_modules/dagster/dagster/version.py

      - name: Build Python packages
        run: |
          # Build core dagster package
          cd python_modules/dagster
          python -m build --wheel --sdist
          cd ../..
          
          # Build dagster-graphql package
          cd python_modules/dagster-graphql
          python -m build --wheel --sdist
          cd ../..
          
          # Build dagster-webserver package
          cd python_modules/dagster-webserver
          python -m build --wheel --sdist
          cd ../..
          
          # List all built packages
          find python_modules -name "dist" -type d -exec ls -la {}/ \;

      - name: Generate build date
        id: build_date
        run: |
          BUILD_DATE=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: dagster/${{ steps.calver.outputs.calver_tag }}
          name: Dagster v${{ steps.calver.outputs.calver_tag }}
          body: |
            # Dagster Python Packages v${{ steps.calver.outputs.calver_tag }}

            🚀 **New Dagster Python packages are now available!**

            ## 📦 Python Packages

            This release includes the following Python packages:
            - dagster
            - dagster-graphql
            - dagster-webserver

            ## 🔧 Build Information

            - **📅 Build Date**: ${{ steps.build_date.outputs.build_date }}
            - **🐍 Python Version**: ${{ env.PYTHON_VERSION }}
            - **📦 Built by**: ${{ github.actor }}
            - **🔗 Workflow Run**: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### ✨ Features
            
            - Multi-platform support (x86_64, arm64)
            - Enhanced performance
            - Bug fixes
            ---

            **Full Changelog**: Compare with [previous releases](https://github.com/${{ github.repository }}/releases)
          files: |
            python_modules/dagster/dist/*
            python_modules/dagster-graphql/dist/*
            python_modules/dagster-webserver/dist/*
          draft: false
          prerelease: false

      - name: Output build information
        run: |
          echo "🚀 Successfully built Dagster Python packages!"
          echo "📅 CalVer Tag: ${{ steps.calver.outputs.calver_tag }}"
          echo "📦 Python Packages:"
          find python_modules -name "dist" -type d -exec ls -la {}/ \;
          echo "🎉 GitHub Release: Dagster v${{ steps.calver.outputs.calver_tag }}"
          echo "🔗 Release URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/dagster/${{ steps.calver.outputs.calver_tag }}"
          TRIGGER_TAG=$(echo "${{ github.event.ref }}" | sed 's|refs/tags/||')
          echo "🧹 Trigger tag '$TRIGGER_TAG' has been cleaned up"
